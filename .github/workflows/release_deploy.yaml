name: Deploy release

on:
  push:
    branches:
      - main
  pull_request:  # un-comment to debug deployments

jobs:
  deploy:
    runs-on: ubuntu-24.04
    env:
      SECRET_KEY_BASE: ${{ secrets.SECRET_KEY_BASE }}
      MIX_ENV: prod

    steps:
      - uses: actions/checkout@v4
      - uses: erlef/setup-beam@v1
        with:
          version-file: .tool-versions
          version-type: strict

      - name: Get prod dependencies
        run: mix deps.get --only prod

      - name: Prod compile
        run: mix compile

      - name: Compile assets
        run: mix assets.deploy

      - name: Generate release
        run: mix phx.gen.release

      - name: Build release
        run: mix release

      - name: Derive git hash and cklist version number
        id: info
        run: |
          echo "git-hash=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          mix run --eval "Mix.Project.config()[:version] |> IO.puts()" > cklist_version.txt
          echo "version=$(tail -n 1 cklist_version.txt)" >> $GITHUB_OUTPUT

      - name: Print version
        run: |
          echo "git short hash: ${{ steps.info.outputs.git-hash }}"
          echo "cklist version: ${{ steps.info.outputs.version }}"

      - name: Deploy to cklist.org
        uses: burnett01/rsync-deployments@7.0.2
        with:
          switches: -az
          path: _build/prod/rel/cklist/
          remote_path: ${{ secrets.DEPLOY_PATH_RELEASES }}/cklist-${{ steps.info.outputs.version }}${{ env.rc }}${{ steps.info.outputs.git-hash }}/
          remote_host: ${{ secrets.DEPLOY_HOST }}
          remote_user: ${{ secrets.DEPLOY_USER }}
          remote_port: ${{ secrets.DEPLOY_PORT }}
          remote_key: ${{ secrets.DEPLOY_KEY }}
        env:
          rc: ${{ github.event_name == 'push' && '-' || 'rc-' }}


      - uses: webfactory/ssh-agent@v0.9.0
        if: github.event_name == 'push'
        with:
          ssh-private-key: ${{ secrets.DEPLOY_KEY }}
      - name: Activate new release
        if: github.event_name == 'push'
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.DEPLOY_PORT }} ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "cd ${{ secrets.DEPLOY_PATH_RELEASES }}; rm current; ln -s cklist-${{ steps.info.outputs.version }}-${{ steps.info.outputs.git-hash }}/ current; ${{ secrets.DEPLOY_RESTART_SERVER }}"
